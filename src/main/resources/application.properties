spring.application.name=demo_sd
spring.ai.openai.api-key=sk-svcacct-QgrubkbD1n_69rW8GGZa5qreIK4hVfhx71iyCxQZmAZ19_ggvxB66xqI2AZ6jeT3BlbkFJau9saRbTQOuEWTlN6mhQgSuVDKhlIYUHPl2UA7uPrH0XEp-sgT0-3SPmVPveMA
spring.ai.openai.api-url=https://api.openai.com/v1
openai.api.key=sk-svcacct-QgrubkbD1n_69rW8GGZa5qreIK4hVfhx71iyCxQZmAZ19_ggvxB66xqI2AZ6jeT3BlbkFJau9saRbTQOuEWTlN6mhQgSuVDKhlIYUHPl2UA7uPrH0XEp-sgT0-3SPmVPveMA
spring.datasource.url=jdbc:postgresql://localhost:5432/TitoliDiBorsa
spring.datasource.username=postgres
spring.datasource.password=18032002
spring.datasource.driver-class-name=org.postgresql.Driver

# Pool di connessione (opzionale, se vuoi configurare HikariCP)
spring.datasource.hikari.maximum-pool-size=10

# Dialetto PostgreSQL per JPA (se stai usando JPA/Hibernate)
spring.jpa.database-platform=org.hibernate.dialect.PostgreSQLDialect
spring.jpa.hibernate.ddl-auto=update
spring.jpa.show-sql=true

server.port = 8090

# URL del server Keycloak
keycloak.auth-server-url=http://localhost:8080/auth
# Nome del realm configurato in Keycloak
keycloak.realm=spring
# Nome del client registrato su Keycloak
keycloak.resource=admin-cli
# Se il client è pubblico o confidenziale
keycloak.public-client=true
# Logout disabilitato
keycloak.security-constraints.enabled=true
keycloak.principal-attribute=preferred_username
# OAuth2 client per il login
# Configurazione del client OAuth2
spring.security.oauth2.client.registration.my-oauth-client.client-id=admin-cli
spring.security.oauth2.client.registration.my-oauth-client.client-secret=ipGpTxezPErLjRTo8hoSBFkETX74coPh
spring.security.oauth2.client.registration.my-oauth-client.authorization-grant-type=openid
spring.security.oauth2.client.registration.my-oauth-client.scope=read,write

spring.security.oauth2.client.provider.my-oauth-client.authorization-uri=http://localhost:8080/realms/spring/protocol/openid-connect/auth
spring.security.oauth2.client.provider.my-oauth-client.token-uri=http://localhost:8080/realms/spring/protocol/openid-connect/token
spring.security.oauth2.client.provider.my-oauth-client.user-info-uri=http://localhost:8080/realms/spring/protocol/openid-connect/userinfo
spring.security.oauth2.client.provider.my-oauth-client.user-name-attribute=preferred_username

spring.security.oauth2.client.provider.keycloak.authorization-uri=http://localhost:8080/realms/spring/protocol/openid-connect/auth
spring.security.oauth2.client.provider.keycloak.token-uri=http://localhost:8080/realms/spring/protocol/openid-connect/token
spring.security.oauth2.client.provider.keycloak.user-info-uri=http://localhost:8080/realms/spring/protocol/openid-connect/userinfo
spring.security.oauth2.client.provider.keycloak.jwk-set-uri=http://localhost:8080/realms/spring/protocol/openid-connect/certs
spring.security.oauth2.client.provider.keycloak.issuer-uri=http://localhost:8080/realms/spring

# Configurazione per il resource server
spring.security.oauth2.resourceserver.jwt.issuer-uri=https://localhost:8080/realms/realms/spring
cors.allowed-origins=*
jwt.auth.converter.principle-attribute=sub
jwt.auth.converter.resource-id=spring-app